@model IEnumerable<ERPBO.Inventory.ViewModels.WarehouseViewModel>
@{
    ViewBag.Title = "List Of Warehouse";
    int sl = 0;
    string badge = string.Empty;
}

<div class="row">
    <div class="col-md-12 text-center">
        <h4><b style="color:darkblue">List Of Warehouse</b></h4>
        <hr />
    </div>
    <div class="col-md-12 mb-2">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-4">
                <input type="text" name="search" id="searchBy" class="form-control form-control-sm" placeholder="Search By Anything" onkeyup="tableFilter('#tblWarehouseData tbody tr',this)" />
            </div>
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <button class="btn btn-primary btn-sm float-lg-right" style="background-color:darkblue" id="btnAddNew"><i class="fa fa-plus"></i> Create Warehouse</button>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <table class="table table-bordered table-sm table-striped table-responsive-lg" id="tblWarehouseData">
            <thead class="btn-dark">
                <tr class="text-center">
                    <th>SL No.</th>
                    <th class="hide"></th>
                    <th>Warehouse Name</th>
                    <th>Remarks</th>
                    <th>StateStatus</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    sl = sl + 1;
                    badge = item.StateStatus.ToLower() == "active" ? "badge bg-success" : "badge bg-danger";
                    <tr>
                        <td class="text-center" width="10%">@sl</td>
                        <td class="hide">@item.Id</td>
                        <td>@item.WarehouseName</td>
                        <td>@item.Remarks</td>
                        <td class="text-center" data-val="@item.StateStatus">
                            <span class="@badge">@item.StateStatus</span>
                        </td>
                        <td class="text-center">
                            <a href="#" class="btn btn-warning btn-sm data-edit-item" data-edit-item="@item.Id"><i class="fa fa-pen"></i> Edit</a>
                        </td>
                    </tr>
                }
                @*@if (Model.Count() == 0)
                {
                    <tr class="text-center empty-row">
                        <td colspan="6">
                            No Rows Found
                        </td>
                    </tr>
                }*@
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="modalWarehouse" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header alert-primary">
                <h4 id="modalHeading" class="modal-title">Add New Warehouse</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmWarehouse">
                    <input type="hidden" name="Id" id="hdfWarehouseId" />
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="txtWarehousename" class="control-label font-weight-bold">Warehouse Name</label>
                            <input type="text" name="warehouseName" value="" id="txtWarehousename" class="form-control form-control-sm" />
                            <span class="error hide required-warehouseName font-weight-bold">Input Warehouse Name!</span>
                            <span class="error hide duplicate-warehouseName font-weight-bold">Already WarehouseName Exist!</span>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarks" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <div class="form-control">
                                <input type="checkbox" id="chkStatestatus" /> <b>Is Active?</b>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer btn-light">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-danger float-right" data-dismiss="modal" data-target="#"><i class="fas fa-times"></i> Cancel </button>
                <button type="submit" class="btn btn-success float-right" id="btnSubmit"><i class="far fa-save"></i> Save </button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        var txtWarehouseName = $("#txtWarehousename");
        var txtRemarks = $("#txtRemarks");
        var chkStatestatus = $("#chkStatestatus");
        var hdfWarehouseId = $("#hdfWarehouseId");

        $(document).ready(function () {
            $('#tblWarehouseData').DataTable({
                "paging": false,
                "lengthChange": false,
                "searching": false,
                "ordering": true,
                "info": false,
                "autoWidth": false,
            });
        })

        function OpenModal() {
            $("#modalWarehouse").modal("show");
            $(".error").addClass("hide");
        }

        $("#btnAddNew").click(function (e) {
            e.preventDefault();
            OpenModal();
            clearCtrl();
        })

        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateForm() == true) {
                var data = JSON.stringify({ Id: TryParseInt(hdfWarehouseId.val(), 0), WarehouseName: txtWarehouseName.val(), Remarks: txtRemarks.val(), IsActive: chkStatestatus.is(":checked") });
                console.log(data);
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveWarehouse', data, getToken())).then(function (res, status) {
                    console.log(status);
                    console.log(res);
                    if (res == true) {
                        message("#msg1", "#modalWarehouse");
                    }
                    else {
                        message("#msg2");
                    }
                    enable("#btnSubmit");
                }).fail(function (err) {
                    console.log(err);
                    enable("#btnSubmit");
                });
            }

        })

        $(document).on("click", "a.data-edit-item", function (e) {
            e.preventDefault()
            clearCtrl();
            var row = $(this).parent().parents('tr');
            var td1 = row.find('td:eq(1)').html();
            var td2 = row.find('td:eq(2)').html();
            var td3 = row.find('td:eq(3)').html();
            var td4 = row.find('td:eq(4)').attr("data-val");

            hdfWarehouseId.val(td1);
            txtWarehouseName.val(td2);
            txtRemarks.val(td3);
            chkStatestatus.prop("checked", false);
            if (td4 === 'Active') {
                chkStatestatus.prop("checked", true);
            }
        })
        function clearCtrl() {
            hdfWarehouseId.val('0');
            txtWarehouseName.val('');
            txtRemarks.val('');
            chkStatestatus.prop("checked", false);

        }
        $(".data-edit-item").click(function (e) {
            e.preventDefault()
            OpenModal()
        });


        function validateForm()
        {
            $(".error").addClass("hide");
            var isValid = true;
            if ($.trim(txtWarehouseName.val()) == "") {
                $(".required-warehouseName").removeClass("hide");
                isValid = false;
            }
            else
            {
                var id = TryParseInt(hdfWarehouseId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ Id: id, WarehouseName: txtWarehouseName.val().trim() }), '/Common/IsDuplicateWarehouseName', getToken()) == true) {
                    $(".duplicate-warehouseName").removeClass("hide");
                    isValid = false;
                }  
            }
            return isValid;
        }

    </script>
}

